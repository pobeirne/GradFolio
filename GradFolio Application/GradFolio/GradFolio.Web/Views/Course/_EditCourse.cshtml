@model GradFolio.Core.ViewModels.CourseViewModel



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="modal-header" style="background-color: #000000; color: #f5fffa">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true" style="color: #ffffff">&times;</span>
        </button>
        <h4 class="modal-title" id="myModalLabel">Edit Course @Model.Title</h4>
    </div>
    <div class="modal-body">


        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Level, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.Level, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Level, "", new {@class = "text-danger"})
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.College, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.College, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.College, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Summary, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.Summary, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Summary, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.Location, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsCurrent, new {@class = "control-label col-lg-4 col-md-4 col-xs-12"})
                <div class="col-lg-8 col-md-8 col-xs-12">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsCurrent)
                        @Html.ValidationMessageFor(model => model.IsCurrent, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="modal-footer" style="background-color: #000000; color: #f5fffa">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
       
        <button id="btn-content-edit-submit" type="button" class="btn btn-primary">Save changes</button>
    </div>
}




